---
- name: S/Y Lille Oe Nav Station computer
  hosts: all
  remote_user: pi
  gather_facts: yes
  become: yes
  vars:
    hostname: navstation
    timezone: UTC
    kiosk_url: http://192.168.2.105//@meri-imperiumi/signalk-infodisplay/
    samba_netbios_name: NAS
    samba_apple_extensions: true
    samba_shares_root: /mnt
    samba_server_string: Lille Oe onboard NAS
    samba_shares:
      - name: library
        comment: Lille Oe onboard library
        group: crew
        write_list: +crew
    samba_users:
      - name: ihmissuski
      - name: bergie
    timers:
      rclone_lille_oe:
        exec_start: /usr/local/bin/rclone sync "lilleoe-drive:Lille Ø/" "/mnt/library/Lille Ø" --drive-export-formats pdf,svg
        user: pi
        group: crew
        on_calendar: daily
        persistent: true
        randomized_delay_sec: 3600
      rclone_keittokirja:
        exec_start: /usr/local/bin/rclone sync "lilleoe-drive:meri-imperiumin Keittokirja/" /mnt/library/keittokirja --drive-export-formats pdf
        user: pi
        group: crew
        on_calendar: weekly
        persistent: true
        randomized_delay_sec: 3600
      rclone_bookshelf:
        exec_start: /usr/local/bin/rclone sync lilleoe-drive:Bookshelf/ /mnt/library/Bookshelf --drive-export-formats pdf
        user: pi
        group: crew
        on_calendar: weekly
        persistent: true
        randomized_delay_sec: 3600
      rclone_audio:
        exec_start: /usr/local/bin/rclone sync "lilleoe-drive:Audio/" "/mnt/library/Audio"
        user: pi
        group: crew
        on_calendar: weekly
        persistent: true
        randomized_delay_sec: 3600
      rclone_video:
        exec_start: /usr/local/bin/rclone sync "lilleoe-drive:Video/" "/mnt/library/Video"
        user: pi
        group: crew
        on_calendar: monthly
        persistent: true
        randomized_delay_sec: 3600
    systemd_units:
      - name: feedi.service
        scope: system
        enabled: true
        Unit_section:
          Description: Feedi Social Reader
        Service_section:
          type: exec
          restart: always
          User: pi
          Group: crew
          WorkingDirectory: /home/pi/feedi
          ExecStart: make run
        Install_section:
          WantedBy: multi-user.target
      - name: handbook.service
        scope: system
        enabled: true
        Unit_section:
          Description: Lille Oe Handbook
        Service_section:
          type: exec
          restart: always
          User: pi
          Group: crew
          WorkingDirectory: /mnt/repositories/handbook
          ExecStart: make run
        Install_section:
          WantedBy: multi-user.target
  pre_tasks:
    - name: Update apt cache
      apt: null
    - name: Set timezone
      timezone:
        name: "{{ timezone }}"
  roles:
    - alphanodes.setup.systemd_timer
    - ansible-role-systemd
  tasks:
    - name: Ensure group "crew" exists
      ansible.builtin.group:
        name: crew
        state: present
    - name: Ensure panel in Wayfire.ini
      community.general.ini_file:
        path: /home/pi/.config/wayfire.ini
        section: autostart
        option: panel
        value: wfrespawn wf-panel-pi
    - name: Ensure background in Wayfire.ini
      community.general.ini_file:
        path: /home/pi/.config/wayfire.ini
        section: autostart
        option: background
        value: wfrespawn pcmanfm --desktop --profile LXDE-pi
    - name: Ensure xdg-autostart in Wayfire.ini
      community.general.ini_file:
        path: /home/pi/.config/wayfire.ini
        section: autostart
        option: xdg-autostart
        value: lxsession-xdg-autostart
    - name: Ensure Chromium in Wayfire.ini
      community.general.ini_file:
        path: /home/pi/.config/wayfire.ini
        section: autostart
        option: chromium
        value: chromium-browser "{{ kiosk_url }}" --kiosk --noerrdialogs
          --disable-infobars --no-first-run --ozone-platform=wayland
          --enable-features=OverlayScrollbar --start-maximized
    - name: Ensure screensaver in Wayfire.ini
      community.general.ini_file:
        path: /home/pi/.config/wayfire.ini
        section: autostart
        option: screensaver
        value: "false"
    - name: Ensure dpms in Wayfire.ini
      community.general.ini_file:
        path: /home/pi/.config/wayfire.ini
        section: autostart
        option: dpms
        value: "false"
    - name: Add the pi user
      ansible.builtin.user:
        name: pi
        shell: /bin/bash
        groups: crew
        append: true
    - name: Add the bergie user
      ansible.builtin.user:
        name: bergie
        shell: /bin/bash
        groups: crew
        append: true
    - name: Add the ihmissuski user
      ansible.builtin.user:
        name: ihmissuski
        shell: /bin/bash
        groups: crew
        append: true
    - name: Add the minidlna user
      ansible.builtin.user:
        name: minidlna
        shell: /usr/sbin/nologin
        groups: crew
        append: true
    - name: Set up Samba file server
      ansible.builtin.include_role:
        name: vladgh.samba.server
    - name: Deploy SSH keys for bergie
      authorized_key:
        user: pi
        state: present
        key: https://github.com/bergie.keys
    - name: Deploy SSH keys for bergie
      authorized_key:
        user: bergie
        state: present
        key: https://github.com/bergie.keys
    - name: Deploy SSH keys for cannonerd
      authorized_key:
        user: pi
        state: present
        key: https://github.com/cannonerd.keys
    - name: Deploy SSH keys for cannonerd user
      authorized_key:
        user: ihmissuski
        state: present
        key: https://github.com/cannonerd.keys
    - name: Install rclone
      ansible.builtin.include_role:
        name: stefangweichinger.ansible_rclone
      vars:
        rclone_arch: "arm64"
    - name: Clone feedi
      ansible.builtin.git:
        repo: 'https://github.com/facundoolano/feedi.git'
        dest: /home/pi/feedi
      register: feediclone
    - name: Add feedi build dependencies
      ansible.builtin.apt:
        pkg:
          - libxml2-dev
          - libxslt-dev
          - libffi-dev
          - npm
    - name: Build feedi
      ansible.builtin.command:
        cmd: make
        chdir: /home/pi/feedi
      when: feediclone.changed
    - name: Install MiniDLNA
      ansible.builtin.apt:
        pkg:
          - minidlna
    - name: Configure MiniDLNA
      ansible.builtin.copy:
        content: |
          media_dir=A,/mnt/library/Audio
          media_dir=A,/mnt/library/Audio-Local
          media_dir=V,/mnt/library/Video
          media_dir=V,/mnt/library/Video-Local
          friendly_name=NAS
          db_dir=/var/cache/minidlna
        dest: /etc/minidlna.conf
    - name: Clone Lille Oe Handbook
      ansible.builtin.git:
        repo: 'https://github.com/meri-imperiumi/handbook.git'
        dest: /mnt/repositories/handbook
      register: handbookclone
    - name: Install handbook dependencies
      ansible.builtin.command:
        cmd: 'make'
        chdir: /mnt/repositories/handbook
      when: handbookclone.changed
    - name: Autoremove any unused packages
      apt:
        autoremove: yes
    - name: Autoclean the system
      apt:
        autoclean: yes

